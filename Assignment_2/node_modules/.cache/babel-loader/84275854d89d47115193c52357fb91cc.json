{"ast":null,"code":"var _jsxFileName = \"/home/ib_admin/Desktop/Practice/Assignment_2/components/src/components/ClickMe/index.js\";\nimport React, { Component } from 'react';\n\nclass ClickMe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckBox = e => {\n      this.setState({\n        value: e.target.value\n      });\n      console.log(this.state.value);\n    };\n\n    this.handleClick = e => {\n      let ref;\n      console.log(this.refs.check_me.checked);\n\n      if (this.state.value === \"Disabled\") {\n        window.alert(\"Iam working\");\n      }\n\n      this.refs[ref].checked = !this.refs[ref].checked;\n    };\n\n    this.state = {\n      value: \"\",\n      msg: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"Disabled\",\n      checked: this.state.value === \"Disabled\",\n      onChange: this.handleCheckBox,\n      ref: \"check_me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Disabled\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Click Me\"));\n  }\n\n}\n\nexport default ClickMe;","map":{"version":3,"sources":["/home/ib_admin/Desktop/Practice/Assignment_2/components/src/components/ClickMe/index.js"],"names":["React","Component","ClickMe","constructor","props","handleCheckBox","e","setState","value","target","console","log","state","handleClick","ref","refs","check_me","checked","window","alert","msg","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOjBC,cAPiB,GAOCC,CAAD,IAAM;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAACF,CAAC,CAACG,MAAF,CAASD;AADL,OAAd;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,KAAvB;AACH,KAZkB;;AAAA,SAanBK,WAbmB,GAaJP,CAAD,IAAM;AAChB,UAAIQ,GAAJ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,IAAL,CAAUC,QAAV,CAAmBC,OAA/B;;AACA,UAAG,KAAKL,KAAL,CAAWJ,KAAX,KAAqB,UAAxB,EAAmC;AAE/BU,QAAAA,MAAM,CAACC,KAAP,CAAa,aAAb;AACH;;AACD,WAAKJ,IAAL,CAAUD,GAAV,EAAeG,OAAf,GAAyB,CAAC,KAAKF,IAAL,CAAUD,GAAV,EAAeG,OAAzC;AACH,KArBkB;;AAEf,SAAKL,KAAL,GAAa;AACbJ,MAAAA,KAAK,EAAC,EADO;AAEbY,MAAAA,GAAG,EAAC;AAFS,KAAb;AAID;;AAgBHC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACC,MAAA,KAAK,EAAG,UADT;AAEC,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWJ,KAAX,KAAqB,UAF/B;AAGC,MAAA,QAAQ,EAAG,KAAKH,cAHjB;AAIC,MAAA,GAAG,EAAG,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANd,EAMqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANrC,EAOI;AAAQ,MAAA,OAAO,EAAE,KAAKQ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CADJ;AAWH;;AAnC0B;;AAqC/B,eAAeX,OAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass ClickMe extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n        value:\"\",\n        msg:\"\"\n        }\n      }\n      handleCheckBox = (e) =>{\n        this.setState({\n            value:e.target.value\n        })\n        console.log(this.state.value)\n    }\n    handleClick = (e) =>{\n        let ref;\n        console.log(this.refs.check_me.checked);\n        if(this.state.value === \"Disabled\"){\n            \n            window.alert(\"Iam working\")\n        }\n        this.refs[ref].checked = !this.refs[ref].checked;\n    }\n    render(){\n        return(\n            <div>\n                <input type=\"checkbox\"\n                 value = \"Disabled\"\n                 checked={this.state.value === \"Disabled\"}\n                 onChange ={this.handleCheckBox}\n                 ref = \"check_me\"\n                 ></input><label>Disabled</label><br></br>\n                <button onClick={this.handleClick}>Click Me</button>\n            </div>\n        )\n    }\n}\nexport default ClickMe"]},"metadata":{},"sourceType":"module"}